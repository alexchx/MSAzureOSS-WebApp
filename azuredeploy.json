{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "jenkinsadmin",
      "minLength": 1,
      "maxLength": 16,
      "metadata": {
        "description": "User name for the Jenkins Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Beat@Apple123",
      "minLength": 6,
      "maxLength": 16,
      "metadata": {
        "description": "Password for the Jenkins Virtual Machine."
      }
    },
    "jenkinsDnsPrefix": {
      "type": "string",
      "defaultValue": "jenkins-oss-00",
      "minLength": 3,
      "maxLength": 16,
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Jenkins Virtual Machine."
      }
    },
    "jenkinsReleaseType": {
      "type": "string",
      "allowedValues": [
        "LTS",
        "weekly",
        "verified"
      ],
      "defaultValue": "LTS",
      "metadata": {
        "description": "The Jenkins release type."
      }
    },
    "repositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/alexchx/MSAzureOSS-VMSS",
      "minLength": 1,
      "metadata": {
        "description": "GitHub repository URL, e.g. https://github.com/xxx/yyy."
      }
    },
    "clientId": {
      "type": "string",
      "defaultValue": "55e66ab1-e79a-449d-a171-ab94214b3c07",
      "minLength": 1,
      "metadata": {
        "description": "Client id for Azure service principal."
      }
    },
    "clientSecret": {
      "type": "string",
      "defaultValue": "60a4f891-cb93-4593-8a07-cf1d2693b70d",
      "minLength": 1,
      "metadata": {
        "description": "Client secret for Azure service principal."
      }
    },
    "webDnsPrefix": {
      "type": "string",
      "defaultValue": "weboss00",
      "minLength": 3,
      "maxLength": 16,
      "metadata": {
        "description": "Prefix name for web app components, accepts numbers and lower-case letters only."
      }
    },
    "webMySqlAdminLogin": {
      "type": "string",
      "defaultValue": "adminLogin",
      "minLength": 3,
      "maxLength": 16,
      "metadata": {
        "description": "User name for MySQL admin login."
      }
    },
    "webMySqlAdminPassword": {
      "type": "securestring",
      "defaultValue": "Beat@Apple123",
      "minLength": 6,
      "maxLength": 16,
      "metadata": {
        "description": "Password for MySQL admin login."
      }
    }
  },
  "variables": {
    "resourcePrefix": "Jenkins",
    "storageAccountName": "[concat(toLower(variables('resourcePrefix')), uniquestring(resourceGroup().id))]",
    "OSDiskName": "[concat(variables('resourcePrefix'), 'OSDisk')]",
    "nicName": "[concat(variables('resourcePrefix'), 'VMNic')]",
    "subnetName": "[concat(variables('resourcePrefix'), 'Subnet')]",
    "publicIPAddressName": "[concat(variables('resourcePrefix'), 'PublicIP')]",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat(variables('resourcePrefix'), 'VM')]",
    "vmExtensionName": "[concat(variables('resourcePrefix'), 'Init')]",
    "virtualNetworkName": "[concat(variables('resourcePrefix'), 'VNET')]",
    "frontEndNSGName": "[concat(variables('resourcePrefix'), 'NSG')]",
    "vNetAddressPrefixes": "10.0.0.0/16",
    "sNetAddressPrefixes": "10.0.0.0/24",
    "vmPrivateIP": "10.0.0.5",
    "_artifactsLocation": "https://raw.githubusercontent.com/Azure/azure-devops-utils/v0.28.1/",
    "_extensionScript": "install_jenkins.sh",
    "_artifactsLocationSasToken": "",
    "_customArtifactsLocation": "[concat(replace(parameters('repositoryUrl'), 'https://github.com/', 'https://raw.githubusercontent.com/'), '/master/')]",
    "_customExtensionScript": "shell-add-jobs-build-webapp.sh",
    "_customArtifactsLocationSasToken": "",
    "webStorageAccountName": "[concat(toLower(parameters('webDnsPrefix')), 'storage')]",
    "webServicePlanName": "[concat(parameters('webDnsPrefix'), 'ServicePlan')]",
    "webAppName": "[concat(parameters('webDnsPrefix'), 'Web')]",
    "webMySqlServerName": "[concat(parameters('webDnsPrefix'), 'mysqlserver')]",
    "webMySqlDbName": "[concat(parameters('webDnsPrefix'), 'mysqldb')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('jenkinsDnsPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('frontEndNSGName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - Front End"
      },
      "properties": {
        "securityRules": [
          {
            "name": "ssh-rule",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "http-rule",
            "properties": {
              "description": "Allow HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNetAddressPrefixes')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('sNetAddressPrefixes')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('frontEndNSGName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('frontEndNSGName'))]"
      ]
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIpAddress": "[variables('vmPrivateIP')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),'/subnets/',variables('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2_v2"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob, variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "[variables('vmExtensionName')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('webStorageAccountName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(variables('_artifactsLocation'), '/jenkins/', variables('_extensionScript'), variables('_artifactsLocationSasToken'))]",
                "[concat(variables('_customArtifactsLocation'), '/jenkins/', variables('_customExtensionScript'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('./' , variables('_extensionScript'), ' -jf \"', reference(variables('publicIPAddressName')).dnsSettings.fqdn, '\" -pi \"\" -al \"', variables('_artifactsLocation'), '\" -st \"', variables('_artifactsLocationSasToken'), '\" -jrt \"', parameters('jenkinsReleaseType'), '\" && ./' , variables('_customExtensionScript'), ' -su \"', subscription().subscriptionId, '\" -t \"', subscription().tenantId, '\" -i \"', parameters('clientId'), '\" -s \"', parameters('clientSecret'), '\" -sn \"', variables('webStorageAccountName'), '\" -sk \"', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('webStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, '\" -rg \"', resourceGroup().name, '\" -w \"', variables('webAppName'), '\" -rr \"', parameters('repositoryUrl'), '\" -al \"', variables('_artifactsLocation'), '\" -st \"', variables('_artifactsLocationSasToken'), '\" -cal \"', variables('_customArtifactsLocation'), '\" -cst \"', variables('_customArtifactsLocationSasToken'), '\"')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_RAGRS"
      },
      "kind": "Storage",
      "name": "[variables('webStorageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "B1"
      },
      "kind": "app",
      "name": "[variables('webServicePlanName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
          "name": "[variables('webServicePlanName')]"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "app",
      "name": "[variables('webAppName')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webServicePlanName'))]"
      },
      "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('webServicePlanName'))]"
      ],
      "resources": [
        {
          "type": "config",
          "name": "appsettings",
          "apiVersion": "2016-08-01",
          "location": "East US",
          "tags": {},
          "properties": {
              "javaVersion": "1.8",
              "javaContainer": "TOMCAT",
              "javaContainerVersion": "9.0"
          },
          "dependsOn": [
              "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
          ]
        },
        {  
          "apiVersion":"2016-08-01",
          "name":"connectionstrings",
          "type":"config",
          "dependsOn":[
              "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
          ],
          "properties": {
             "defaultConnection": {
                "value":"[concat('Database=', variables('webMySqlDbName'), ';Data Source=', variables('webMySqlServerName'), '.mysql.database.azure.com;User Id=', parameters('webMySqlAdminLogin'),'@', variables('webMySqlServerName'),';Password=', parameters('webMySqlAdminPassword'))]",
                "type":"MySql"
             }
          }
        }
      ]
    },
    {  
      "apiVersion":"2017-04-30-preview",
      "location":"[resourceGroup().location]",
      "name":"[variables('webMySqlServerName')]",
      "properties":{
         "version":"5.7",
         "administratorLogin":"[parameters('webMySqlAdminLogin')]",
         "administratorLoginPassword":"[parameters('webMySqlAdminPassword')]"
      },
      "sku":{  
         "name":"MYSQLB50",
         "tier":"Basic",
         "capacity":50
      },
      "type":"Microsoft.DBforMySQL/servers",
      "resources":[  
         {  
            "type":"firewallrules",
            "apiVersion":"2017-04-30-preview",
            "dependsOn":[  
               "[resourceId('Microsoft.DBforMySQL/servers', variables('webMySqlServerName'))]"
            ],
            "location":"[resourceGroup().location]",
            "name":"[concat(variables('webMySqlServerName'),'Firewall')]",
            "properties":{  
               "startIpAddress":"0.0.0.0",
               "endIpAddress":"255.255.255.255"
            }
         },
         {  
            "name":"[variables('webMySqlDbName')]",
            "type":"databases",
            "apiVersion":"2017-04-30-preview",
            "properties":{  
               "charset":"utf8",
               "collation":"utf8_general_ci"
            },
            "dependsOn":[  
               "[resourceId('Microsoft.DBforMySQL/servers', variables('webMySqlServerName'))]"
            ]
         }
      ]
    }
  ],
  "outputs": {
    "jenkinsURL": {
      "type": "string",
      "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    },
    "SSH": {
      "type": "string",
      "value": "[concat('ssh -L 8080:localhost:8080 ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    },
    "webAppURL": {
      "type": "string",
      "value": "[concat('http://', reference(variables('webAppName')).defaultHostName)]"
    }
  }
}
